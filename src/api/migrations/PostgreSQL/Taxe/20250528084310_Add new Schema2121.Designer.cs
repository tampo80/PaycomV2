// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PayCom.WebApi.Taxe.Infrastructure.Persistence;

#nullable disable

namespace PayCom.WebApi.Migrations.PostgreSQL.Taxe
{
    [DbContext(typeof(TaxeDbContext))]
    [Migration("20250528084310_Add new Schema2121")]
    partial class AddnewSchema2121
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("taxe")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FSH.Framework.Core.Identity.Users.Dtos.UserDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserDetail", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.AgentFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateFinFonction")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstCollecteurTerrain")
                        .HasColumnType("boolean");

                    b.Property<string>("Identifiant")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LocalisationGPS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("SoldePortefeuille")
                        .HasColumnType("double precision");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid?>("UtilisateurId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ZoneCollecteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ZoneCollecteId");

                    b.ToTable("AgentsFiscaux", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.CollecteTerrainSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AgentFiscalId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.Property<Guid>("ZoneCollecteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AgentFiscalId");

                    b.HasIndex("ZoneCollecteId");

                    b.ToTable("CollecteTerrainSessions", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Commune", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdresseCentreAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdresseSiege")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodeTenant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactCentreAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailCentreAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstActif")
                        .HasColumnType("boolean");

                    b.Property<bool>("EstTenantActif")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomCentreAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NombreArrondissements")
                        .HasColumnType("integer");

                    b.Property<int>("NombreSecteurs")
                        .HasColumnType("integer");

                    b.Property<int?>("Population")
                        .HasColumnType("integer");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("ResponsableCentreAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SiteWeb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Superficie")
                        .HasColumnType("double precision");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("TypeChefLieu")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Communes", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Configurations", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Contribuable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("AgentFiscalId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("CapitalSocial")
                        .HasColumnType("numeric");

                    b.Property<string>("ContactPrincipal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactSecondaire")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateCreationEntreprise")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateEnregistrement")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormeJuridique")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LocalisationGPS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomCommercial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroIdentification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroRegistreCommerce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RepresentantLegal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecteurActivite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("TypeActivite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeContribuable")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UtilisateurId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AgentFiscalId");

                    b.ToTable("Contribuables", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Echeance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnneeImposition")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<double>("MontantBase")
                        .HasColumnType("double precision");

                    b.Property<double>("MontantPenalites")
                        .HasColumnType("double precision");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ObligationFiscaleId")
                        .HasColumnType("uuid");

                    b.Property<int>("PeriodeImposition")
                        .HasColumnType("integer");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ObligationFiscaleId");

                    b.ToTable("Echeances", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Echeancier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<double>("MontantDu")
                        .HasColumnType("double precision");

                    b.Property<double>("MontantPaye")
                        .HasColumnType("double precision");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Echeanciers", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateLecture")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("EstLue")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Notifications", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ObligationFiscale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommuneId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContribuableId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("EstActif")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LocalisationGPS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceProprieteBien")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TypeTaxeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("ContribuableId");

                    b.HasIndex("TypeTaxeId");

                    b.ToTable("ObligationsFiscales", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Operations", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Paiement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodeTransaction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateTransaction")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<double>("FraisTransaction")
                        .HasColumnType("double precision");

                    b.Property<string>("InformationsSupplementaires")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<int>("ModePaiement")
                        .HasColumnType("integer");

                    b.Property<double>("Montant")
                        .HasColumnType("double precision");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Paiements", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.PaiementTerrain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AgentFiscalId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContribuableId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EcheanceId")
                        .HasColumnType("uuid");

                    b.Property<bool>("EstSynchronise")
                        .HasColumnType("boolean");

                    b.Property<string>("GeoLocalisation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<int>("ModePaiement")
                        .HasColumnType("integer");

                    b.Property<double>("Montant")
                        .HasColumnType("double precision");

                    b.Property<string>("NumeroQuittance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoPreuve")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceRecue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignatureContribuable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgentFiscalId");

                    b.HasIndex("ContribuableId");

                    b.HasIndex("EcheanceId");

                    b.ToTable("PaiementTerrains", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Penalite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateApplication")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<double>("Montant")
                        .HasColumnType("double precision");

                    b.Property<Guid>("TaxeConcerneeId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaxeConcerneeId");

                    b.ToTable("Penalites", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Prefecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Prefectures", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ChefLieuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("ChefLieuId");

                    b.ToTable("Regions", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Taxe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnneeImposition")
                        .HasColumnType("integer");

                    b.Property<string>("Caracteristiques")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateDerniereModification")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<double>("MontantDu")
                        .HasColumnType("double precision");

                    b.Property<double>("MontantPaye")
                        .HasColumnType("double precision");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("double precision");

                    b.Property<double>("SoldeRestant")
                        .HasColumnType("double precision");

                    b.Property<double>("Taux")
                        .HasColumnType("double precision");

                    b.Property<string>("UniteMesure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Taxes", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.TransactionCollecte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CollecteTerrainSessionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EcheanceId")
                        .HasColumnType("uuid");

                    b.Property<bool>("EstSynchronise")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("HorodatageTransaction")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LocalisationGPS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModePaiement")
                        .HasColumnType("integer");

                    b.Property<double>("MontantPercu")
                        .HasColumnType("double precision");

                    b.Property<string>("PhotoPreuve")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceTransaction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignatureContribuable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CollecteTerrainSessionId");

                    b.HasIndex("EcheanceId");

                    b.ToTable("TransactionCollectes", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.TransactionPaiement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentCollecteurId")
                        .HasColumnType("uuid");

                    b.Property<string>("BanqueEmettrice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodeTransaction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateVirement")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("DonneesTechniques")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstPaiementTerrain")
                        .HasColumnType("boolean");

                    b.Property<string>("FournisseurPaiement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Frais")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("LieuCollecte")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModePaiement")
                        .HasColumnType("integer");

                    b.Property<double>("Montant")
                        .HasColumnType("double precision");

                    b.Property<string>("NumeroCompte")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PaiementId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReferenceBancaire")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceVirement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionCollecteId")
                        .HasColumnType("uuid");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("PaiementId");

                    b.ToTable("TransactionPaiements", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.TypeTaxe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstPeriodique")
                        .HasColumnType("boolean");

                    b.Property<int>("FrequencePaiement")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("NecessiteInspection")
                        .HasColumnType("boolean");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TauxBase")
                        .HasColumnType("double precision");

                    b.Property<string>("UniteMesure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypesTaxe", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Village", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Villages", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Ville", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("Villes", "taxe");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ZoneCollecte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CommuneId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("DelimitationGeoJSON")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.ToTable("ZonesCollecte", "taxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.AgentFiscal", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.ZoneCollecte", null)
                        .WithMany("AgentsAssignes")
                        .HasForeignKey("ZoneCollecteId");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.CollecteTerrainSession", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.AgentFiscal", "AgentFiscal")
                        .WithMany()
                        .HasForeignKey("AgentFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.ZoneCollecte", "ZoneCollecte")
                        .WithMany()
                        .HasForeignKey("ZoneCollecteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgentFiscal");

                    b.Navigation("ZoneCollecte");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Commune", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Region", "Region")
                        .WithMany("Communes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Contribuable", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.AgentFiscal", "AgentFiscal")
                        .WithMany()
                        .HasForeignKey("AgentFiscalId");

                    b.Navigation("AgentFiscal");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Echeance", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.ObligationFiscale", "ObligationFiscale")
                        .WithMany("Echeances")
                        .HasForeignKey("ObligationFiscaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObligationFiscale");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ObligationFiscale", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.Contribuable", "Contribuable")
                        .WithMany()
                        .HasForeignKey("ContribuableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.TypeTaxe", "TypeTaxe")
                        .WithMany()
                        .HasForeignKey("TypeTaxeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");

                    b.Navigation("Contribuable");

                    b.Navigation("TypeTaxe");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Operation", b =>
                {
                    b.HasOne("FSH.Framework.Core.Identity.Users.Dtos.UserDetail", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.PaiementTerrain", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.AgentFiscal", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.Contribuable", "Contribuable")
                        .WithMany()
                        .HasForeignKey("ContribuableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.Echeance", "Echeance")
                        .WithMany()
                        .HasForeignKey("EcheanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Contribuable");

                    b.Navigation("Echeance");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Penalite", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Taxe", "TaxeConcernee")
                        .WithMany()
                        .HasForeignKey("TaxeConcerneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxeConcernee");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Region", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Commune", null)
                        .WithMany()
                        .HasForeignKey("ChefLieuId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.TransactionCollecte", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.CollecteTerrainSession", "Session")
                        .WithMany("Transactions")
                        .HasForeignKey("CollecteTerrainSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayCom.WebApi.Taxe.Domain.Echeance", "Echeance")
                        .WithMany("Transactions")
                        .HasForeignKey("EcheanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Echeance");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.TransactionPaiement", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Paiement", "Paiement")
                        .WithMany()
                        .HasForeignKey("PaiementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paiement");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ZoneCollecte", b =>
                {
                    b.HasOne("PayCom.WebApi.Taxe.Domain.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.CollecteTerrainSession", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Echeance", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ObligationFiscale", b =>
                {
                    b.Navigation("Echeances");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.Region", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("PayCom.WebApi.Taxe.Domain.ZoneCollecte", b =>
                {
                    b.Navigation("AgentsAssignes");
                });
#pragma warning restore 612, 618
        }
    }
}
